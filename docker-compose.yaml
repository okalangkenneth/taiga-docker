version: "3.8"

services:
  taiga-db:
    image: postgres:12.3
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - taiga-db-data:/var/lib/postgresql/data
    networks:
      - taiga
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  taiga-back:
    build: ./taiga-back-custom
    environment:
      DJANGO_SETTINGS_MODULE: settings.config
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: taiga-db
      TAIGA_SECRET_KEY: j5_e4atjh#mo)f9olk@i!jkk=7e5!$b(yd!v6*0rx$7bq(9lwl
      TAIGA_SITES_SCHEME: http
      TAIGA_SITES_DOMAIN: ghi8oco8k4w04k4o8coco848.95.217.187.120.sslip.io
      PUBLIC_REGISTER_ENABLED: "True"
    volumes:
      - taiga-static-data:/taiga-back/static
      - taiga-media-data:/taiga-back/media
    depends_on:
      - taiga-db
      - taiga-events-rabbitmq
      - taiga-async-rabbitmq
    networks:
      - taiga

  taiga-async:
    build: ./taiga-back-custom
    entrypoint:
      - /taiga-back/docker/async_entrypoint.sh
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: taiga-db
      TAIGA_SECRET_KEY: j5_e4atjh#mo)f9olk@i!jkk=7e5!$b(yd!v6*0rx$7bq(9lwl
      TAIGA_SITES_SCHEME: http
      TAIGA_SITES_DOMAIN: ghi8oco8k4w04k4o8coco848.95.217.187.120.sslip.io
      PUBLIC_REGISTER_ENABLED: "True"
    volumes:
      - taiga-static-data:/taiga-back/static
      - taiga-media-data:/taiga-back/media
    depends_on:
      taiga-db:
        condition: service_healthy
    networks:
      - taiga

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_ERLANG_COOKIE: secret-erlang-cookie
      RABBITMQ_DEFAULT_USER: taiga
      RABBITMQ_DEFAULT_PASS: taiga123
      RABBITMQ_DEFAULT_VHOST: taiga
    hostname: taiga-async-rabbitmq
    volumes:
      - taiga-async-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga
    healthcheck:
      test: rabbitmqctl ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  taiga-front:
    image: taigaio/taiga-front:6.7.0
    environment:
      TAIGA_SITES_DOMAIN: ghi8oco8k4w04k4o8coco848.95.217.187.120.sslip.io
      PUBLIC_REGISTER_ENABLED: "true"
    depends_on:
      - taiga-back
    networks:
      - taiga

  taiga-events:
    image: taigaio/taiga-events:6.7.0
    environment:
      RABBITMQ_USER: taiga
      RABBITMQ_PASS: taiga123
      TAIGA_SECRET_KEY: j5_e4atjh#mo)f9olk@i!jkk=7e5!$b(yd!v6*0rx$7bq(9lwl
    depends_on:
      - taiga-events-rabbitmq
    networks:
      - taiga

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_ERLANG_COOKIE: secret-erlang-cookie
      RABBITMQ_DEFAULT_USER: taiga
      RABBITMQ_DEFAULT_PASS: taiga123
      RABBITMQ_DEFAULT_VHOST: taiga
    hostname: taiga-events-rabbitmq
    volumes:
      - taiga-events-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga
    healthcheck:
      test: rabbitmqctl ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  taiga-protected:
    image: taigaio/taiga-protected:6.7.0
    environment:
      MAX_AGE: "360"
      SECRET_KEY: j5_e4atjh#mo)f9olk@i!jkk=7e5!$b(yd!v6*0rx$7bq(9lwl
    networks:
      - taiga

  taiga-gateway:
    image: nginx:alpine
    volumes:
      - taiga-static-data:/taiga-back/static:ro
      - taiga-media-data:/taiga-back/media:ro
    command: >
      /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf &&
               echo 'server { 
                listen 80;
                server_name _;
                client_max_body_size 100M;
                charset utf-8;
                
                location / {
                    proxy_pass http://taiga-front:80;
                    proxy_set_header Host $$host;
                    proxy_set_header X-Real-IP $$remote_addr;
                    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $$scheme;
                }
                
                location /api {
                    proxy_pass http://taiga-back:8000/api;
                    proxy_set_header Host $$host;
                    proxy_set_header X-Real-IP $$remote_addr;
                    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $$scheme;
                }
                
                location /admin {
                    proxy_pass http://taiga-back:8000/admin;
                    proxy_set_header Host $$host;
                    proxy_set_header X-Real-IP $$remote_addr;
                    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $$scheme;
                }
                
                location /static {
                    alias /taiga-back/static;
                }
                
                location /media {
                    alias /taiga-back/media;
                }
                
                location /events {
                    proxy_pass http://taiga-events:8888/events;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $$http_upgrade;
                    proxy_set_header Connection \"upgrade\";
                    proxy_set_header Host $$host;
                }
                
                location ~* ^/media/protected/(.*)$ {
                    proxy_pass http://taiga-protected:8003/protected/$$1;
                    proxy_set_header Host $$host;
                    proxy_set_header X-Real-IP $$remote_addr;
                    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $$scheme;
                }
            }' > /etc/nginx/conf.d/default.conf && 
               nginx -g 'daemon off;'"
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events
      - taiga-protected
    networks:
      - taiga
    labels:
      - "coolify.domain=ghi8oco8k4w04k4o8coco848.95.217.187.120.sslip.io"
      - "coolify.default=true"

volumes:
  taiga-db-data:
  taiga-static-data:
  taiga-media-data:
  taiga-async-rabbitmq-data:
  taiga-events-rabbitmq-data:

networks:
  taiga:
